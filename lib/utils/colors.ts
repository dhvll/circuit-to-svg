/// <reference lib="dom" />

declare const window: Window & typeof globalThis

// Kicad-2020 color scheme
export const colorMap = {
  "3d_viewer": {
    background_bottom: "rgb(102, 102, 128)",
    background_top: "rgb(204, 204, 230)",
    board: "rgb(51, 43, 23)",
    copper: "rgb(179, 156, 0)",
    silkscreen_bottom: "rgb(230, 230, 230)",
    silkscreen_top: "rgb(230, 230, 230)",
    soldermask: "rgb(20, 51, 36)",
    solderpaste: "rgb(128, 128, 128)",
  },
  board: {
    anchor: "rgb(255, 38, 226)",
    aux_items: "rgb(255, 255, 255)",
    b_adhes: "rgb(0, 0, 132)",
    b_crtyd: "rgb(255, 38, 226)",
    b_fab: "rgb(88, 93, 132)",
    b_mask: "rgba(2, 255, 238, 0.400)",
    b_paste: "rgb(0, 194, 194)",
    b_silks: "rgb(232, 178, 167)",
    background: "rgb(0, 16, 35)",
    cmts_user: "rgb(89, 148, 220)",
    copper: {
      b: "rgb(77, 127, 196)",
      f: "rgb(200, 52, 52)",
      in1: "rgb(127, 200, 127)",
      in10: "rgb(237, 124, 51)",
      in11: "rgb(91, 195, 235)",
      in12: "rgb(247, 111, 142)",
      in13: "rgb(167, 165, 198)",
      in14: "rgb(40, 204, 217)",
      in15: "rgb(232, 178, 167)",
      in16: "rgb(242, 237, 161)",
      in17: "rgb(237, 124, 51)",
      in18: "rgb(91, 195, 235)",
      in19: "rgb(247, 111, 142)",
      in2: "rgb(206, 125, 44)",
      in20: "rgb(167, 165, 198)",
      in21: "rgb(40, 204, 217)",
      in22: "rgb(232, 178, 167)",
      in23: "rgb(242, 237, 161)",
      in24: "rgb(237, 124, 51)",
      in25: "rgb(91, 195, 235)",
      in26: "rgb(247, 111, 142)",
      in27: "rgb(167, 165, 198)",
      in28: "rgb(40, 204, 217)",
      in29: "rgb(232, 178, 167)",
      in3: "rgb(79, 203, 203)",
      in30: "rgb(242, 237, 161)",
      in4: "rgb(219, 98, 139)",
      in5: "rgb(167, 165, 198)",
      in6: "rgb(40, 204, 217)",
      in7: "rgb(232, 178, 167)",
      in8: "rgb(242, 237, 161)",
      in9: "rgb(141, 203, 129)",
    },
    cursor: "rgb(255, 255, 255)",
    drc: "rgb(194, 194, 194)",
    drc_error: "rgba(215, 91, 107, 0.800)",
    drc_exclusion: "rgb(255, 255, 255)",
    drc_warning: "rgba(255, 208, 66, 0.902)",
    dwgs_user: "rgb(194, 194, 194)",
    eco1_user: "rgb(180, 219, 210)",
    eco2_user: "rgb(216, 200, 82)",
    edge_cuts: "rgb(208, 210, 205)",
    f_adhes: "rgb(132, 0, 132)",
    f_crtyd: "rgb(255, 0, 245)",
    f_fab: "rgb(175, 175, 175)",
    f_mask: "rgba(216, 100, 255, 0.400)",
    f_paste: "rgba(180, 160, 154, 0.902)",
    f_silks: "rgb(242, 237, 161)",
    footprint_text_back: "rgb(0, 0, 132)",
    footprint_text_front: "rgb(194, 194, 194)",
    footprint_text_invisible: "rgb(132, 132, 132)",
    grid: "rgb(132, 132, 132)",
    grid_axes: "rgb(194, 194, 194)",
    margin: "rgb(255, 38, 226)",
    microvia: "rgb(0, 132, 132)",
    no_connect: "rgb(0, 0, 132)",
    pad_back: "rgb(77, 127, 196)",
    pad_front: "rgb(200, 52, 52)",
    pad_plated_hole: "rgb(194, 194, 0)",
    pad_through_hole: "rgb(227, 183, 46)",
    plated_hole: "rgb(26, 196, 210)",
    ratsnest: "rgba(245, 255, 213, 0.702)",
    select_overlay: "rgb(4, 255, 67)",
    through_via: "rgb(236, 236, 236)",
    user_1: "rgb(194, 194, 194)",
    user_2: "rgb(89, 148, 220)",
    user_3: "rgb(180, 219, 210)",
    user_4: "rgb(216, 200, 82)",
    user_5: "rgb(194, 194, 194)",
    user_6: "rgb(89, 148, 220)",
    user_7: "rgb(180, 219, 210)",
    user_8: "rgb(216, 200, 82)",
    user_9: "rgb(232, 178, 167)",
    via_blind_buried: "rgb(187, 151, 38)",
    via_hole: "rgb(227, 183, 46)",
    via_micro: "rgb(0, 132, 132)",
    via_through: "rgb(236, 236, 236)",
    worksheet: "rgb(200, 114, 171)",
  },
  gerbview: {
    axes: "rgb(0, 0, 132)",
    background: "rgb(0, 0, 0)",
    dcodes: "rgb(255, 255, 255)",
    grid: "rgb(132, 132, 132)",
    layers: [
      "rgb(132, 0, 0)",
      "rgb(194, 194, 0)",
      "rgb(194, 0, 194)",
      "rgb(194, 0, 0)",
      "rgb(0, 132, 132)",
      "rgb(0, 132, 0)",
      "rgb(0, 0, 132)",
      "rgb(132, 132, 132)",
      "rgb(132, 0, 132)",
      "rgb(194, 194, 194)",
      "rgb(132, 0, 132)",
      "rgb(132, 0, 0)",
      "rgb(132, 132, 0)",
      "rgb(194, 194, 194)",
      "rgb(0, 0, 132)",
      "rgb(0, 132, 0)",
      "rgb(132, 0, 0)",
      "rgb(194, 194, 0)",
      "rgb(194, 0, 194)",
      "rgb(194, 0, 0)",
      "rgb(0, 132, 132)",
      "rgb(0, 132, 0)",
      "rgb(0, 0, 132)",
      "rgb(132, 132, 132)",
      "rgb(132, 0, 132)",
      "rgb(194, 194, 194)",
      "rgb(132, 0, 132)",
      "rgb(132, 0, 0)",
      "rgb(132, 132, 0)",
      "rgb(194, 194, 194)",
      "rgb(0, 0, 132)",
      "rgb(0, 132, 0)",
      "rgb(132, 0, 0)",
      "rgb(194, 194, 0)",
      "rgb(194, 0, 194)",
      "rgb(194, 0, 0)",
      "rgb(0, 132, 132)",
      "rgb(0, 132, 0)",
      "rgb(0, 0, 132)",
      "rgb(132, 132, 132)",
      "rgb(132, 0, 132)",
      "rgb(194, 194, 194)",
      "rgb(132, 0, 132)",
      "rgb(132, 0, 0)",
    ],
    negative_objects: "rgb(132, 132, 132)",
    worksheet: "rgb(0, 0, 132)",
  },
  meta: {
    filename: "kicad_2020",
    name: "KiCad 2020",
    version: 2,
  },
  palette: [
    "rgb(132, 0, 0)",
    "rgb(194, 194, 0)",
    "rgb(194, 0, 194)",
    "rgb(194, 0, 0)",
    "rgb(0, 132, 132)",
    "rgb(0, 132, 0)",
    "rgb(0, 0, 132)",
    "rgb(132, 132, 132)",
    "rgb(132, 0, 132)",
    "rgb(194, 194, 194)",
    "rgb(132, 0, 132)",
    "rgb(132, 0, 0)",
    "rgb(132, 132, 0)",
    "rgb(194, 194, 194)",
    "rgb(0, 0, 132)",
    "rgb(0, 132, 0)",
  ],
  schematic: {
    aux_items: "rgb(46, 46, 46)",
    background: "rgb(245, 241, 237)",
    brightened: "rgb(255, 0, 255)",
    bus: "rgb(0, 0, 132)",
    bus_junction: "rgb(0, 0, 132)",
    component_body: "rgb(255, 255, 194)",
    component_outline: "rgb(132, 0, 0)",
    cursor: "rgb(15, 15, 15)",
    erc_error: "rgba(230, 9, 13, 0.800)",
    erc_warning: "rgba(209, 146, 0, 0.800)",
    fields: "rgb(132, 0, 132)",
    grid: "rgb(181, 181, 181)",
    grid_axes: "rgb(0, 0, 132)",
    hidden: "rgb(194, 194, 194)",
    junction: "rgb(150, 150, 150)",
    label_global: "rgb(132, 0, 0)",
    label_hier: "rgb(114, 86, 0)",
    label_local: "rgb(15, 15, 15)",
    net_name: "rgb(132, 132, 132)",
    no_connect: "rgb(0, 0, 132)",
    note: "rgb(0, 0, 194)",
    override_item_colors: false,
    pin: "rgb(132, 0, 0)",
    pin_name: "rgb(0, 100, 100)",
    pin_number: "rgb(169, 0, 0)",
    reference: "rgb(0, 100, 100)",
    shadow: "rgba(102, 179, 255, 0.800)",
    sheet: "rgb(132, 0, 0)",
    sheet_background: "rgba(253, 255, 231, 0.000)",
    sheet_fields: "rgb(132, 0, 132)",
    sheet_filename: "rgb(114, 86, 0)",
    sheet_label: "rgb(0, 100, 100)",
    sheet_name: "rgb(0, 100, 100)",
    value: "rgb(0, 100, 100)",
    wire: "rgb(0, 150, 0)",
    wire_crossing: "rgb(30, 180, 30)",
    worksheet: "rgb(132, 0, 0)",
    component_name: "rgb(0, 0, 0)",
  },
}

// Dark theme color map
export const darkColorMap = {
  ...colorMap,
  board: {
    ...colorMap.board,
    background: "rgb(40, 40, 85)",
    grid: "rgb(70, 70, 75)",
    grid_axes: "rgb(100, 100, 105)",
    cursor: "rgb(255, 255, 255)",
    copper: {
      ...colorMap.board.copper,
      f: "rgb(240, 90, 90)",
      b: "rgb(120, 170, 230)",
    },
    f_silks: "rgb(255, 255, 200)",
    b_silks: "rgb(255, 220, 210)",
    edge_cuts: "rgb(250, 250, 245)",
    drc_error: "rgba(245, 100, 115, 0.900)",
    drc_warning: "rgba(255, 220, 80, 0.950)",
  },
  schematic: {
    ...colorMap.schematic,
    background: "rgb(40, 40, 45)",
    wire: "rgb(200, 255, 200)",
    bus: "rgb(0, 150, 150)",
    junction: "rgb(200, 200, 200)",
    component_outline: "rgb(255, 70, 70)",
    component_body: "rgb(255, 255, 210)",
    pin_number: "rgb(180, 0, 0)",
    pin_name: "rgb(0, 120, 120)",
    reference: "rgb(255, 255, 255)",
    component_name: "rgb(255, 255, 255)",
    fields: "rgb(150, 0, 150)",
    label_local: "rgb(237, 0, 0)",
    label_global: "rgb(150, 0, 0)",
    label_hier: "rgb(130, 100, 0)",
    grid: "rgb(55, 55, 60)",
    grid_axes: "rgb(75, 75, 80)",
    net_name: "rgb(150, 150, 150)",
    sheet_label: "rgb(255, 255, 255)",
    value: "rgb(255, 255, 255)",
  },
}
export let forceDarkMode = false

// Function to detect system color scheme
export function getPreferredColorScheme() {
  if (forceDarkMode) return "dark"
  if (typeof window === "undefined" || typeof window.matchMedia === "undefined")
    return "light"
  return window.matchMedia("(prefers-color-scheme: dark)").matches
    ? "dark"
    : "light"
}

// Function to get the active color map
export function getActiveColorMap() {
  return getPreferredColorScheme() === "dark" ? darkColorMap : colorMap
}

// Color system constants
export const colors = {
  light: {
    background: "#ffffff",
    text: "#000000",
    border: "#e5e7eb",
  },
  dark: {
    background: "#1a1a1a",
    text: "#ffffff",
    border: "#374151",
  },
} as const

// Helper function to get color based on theme
export const getThemeColor = (
  colorKey: keyof typeof colors.light,
  isDark: boolean = false
) => (isDark ? colors.dark[colorKey] : colors.light[colorKey])

// Function to check if system is in dark mode
export const isDarkMode = () => {
  if (typeof window === "undefined") return false
  return (
    window.matchMedia &&
    window.matchMedia("(prefers-color-scheme: dark)").matches
  )
}

// Export color tokens for use in JS/TS files
export const colorTokens = {
  background: "var(--background)",
  text: "var(--text)",
  border: "var(--border)",
} as const
